pipeline {
	agent none
    stages {
		stage('RunTests') {
			parallel {
				stage('Prototypes') {
					agent {
						label "windows && midweight && physical"
					}
					environment {
						GRAPEVINE_PASSWORD = credentials('grapevine-validation-password')
					}
					steps {
						bat '''
							@echo off
							if not exist ApsimX (
								git config --system core.longpaths true
								git clone https://github.com/APSIMInitiative/ApsimX ApsimX
							)
							cd ApsimX\\Jenkins
							call cleanup
							if errorlevel 1 exit /b 1
							call build /r
							if errorlevel 1 exit /b 1
							call runTests Prototypes
						'''
					}
				}
				stage('Validation') {
					agent {
						label "windows && heavyweight && physical"
					}
					environment {
						SOYBEAN_PASSWORD = credentials('soybean-validation-password')
						NPI_PASSWORD = credentials('npi-archive-password')
					}
					steps {
						bat '''
							@echo off
							if not exist ApsimX (
								git config --system core.longpaths true
								git clone https://github.com/APSIMInitiative/ApsimX ApsimX
							)
							cd ApsimX\\Jenkins
							call cleanup
							if errorlevel 1 exit /b 1
							call build /r
							if errorlevel 1 exit /b 1
							call runTests Validation
							if errorlevel 1 exit /b 1
							call performanceTests
							if errorlevel 1 exit /b 1
						'''
					}
				}
				stage('Run Examples') {
					agent {
						label "windows && physical"
					}
					steps {
						bat '''
							@echo off
							if not exist ApsimX (
								git config --system core.longpaths true
								git clone https://github.com/APSIMInitiative/ApsimX ApsimX
							)
							cd ApsimX\\Jenkins
							call cleanup
							if errorlevel 1 exit /b 1
							call build /r
							if errorlevel 1 exit /b 1
							call runTests Examples
						'''
					}
				}
				stage('UI') {
					agent {
						label "windows && physical"
					}
					steps {
						bat '''
							@echo off
							if not exist ApsimX (
								git config --system core.longpaths true
								git clone https://github.com/APSIMInitiative/ApsimX ApsimX
							)
							cd ApsimX\\Jenkins
							call cleanup
							if errorlevel 1 exit /b 1
							call build /r
							if errorlevel 1 exit /b 1
							call runTests UI
						'''
					}
				}
				stage('Unit Tests') {
					agent {
						label "windows && physical"
					}
					steps {
						bat '''
							@echo off
							if not exist ApsimX (
								git config --system core.longpaths true
								git clone https://github.com/APSIMInitiative/ApsimX ApsimX
							)
							cd ApsimX\\Jenkins
							call cleanup
							if errorlevel 1 exit /b 1
							call build /r
							if errorlevel 1 exit /b 1
							call runTests Unit
						'''
					}
				}
			}
		}
    }
}